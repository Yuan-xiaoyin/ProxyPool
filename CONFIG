这个代理池主要包含一下几个模块：获取代理模块、存储模块、测试模块和接口模块

获取代理模块：主要是从一些代理网站上面爬取免费的代理
存储模块：1、使用redis的有序集合，集合的每个元素就是一个个不重复的代理。
        2、在存储的时候会给每个元素一个分数字段（这个分数主要用于判断代理是否可用）
        3、在最初获取到的代理用分数10表示，如果可用直接设置为100（因为免费代理的不稳定性，所以直接设置为100）
            如果获取的代理不可用就在10的基础上减一，这样可以提高代理的利用率（有时候因为代理可能因为网络繁忙等原因）
        4、新获取的代理分数减至0的时候就直接从数据库中删除元素
检测模块：我们前面已经将各个网站的获取下来了，代理检测可用就直接将分数设置为100，不可用就在原来的基础上减一；
        由于获取的代理量很大，所以采用异步的方式进行测试
        测试的连接我们采用百度的地址进行测试（如果有抓取需求，最好的设置为目标站点的url，因为有可能这个代理可以访问百度，但是被要访问的目标url封了）
        如何判断代理是否可用呢？
        采用了判断response的status来判断代理是否可用（状态码为200,说明成功请求并返回数据，就将代理分数设置为100,否则就减一）
接口模块：主要用来将获取可用的代理
        有以下两种方法：
        一：可以用RedisClient类直接连接Redis然后调用random()（使用随机获取的方式，可以保证每个代理都能被只用）方法就可以获取
        但是这种方法有以下几个缺点：1.如果别人使用这个代理池，他就需要知道Redis的用户名和密码
                                2.如果爬虫不是用python来编写的，那么我们就无法使用RedisClient来获取代理了
        二：我们采用WebApi的形式暴露可用代理，是代理池可以作为一个独立服务运行，我们只需要请求接口就可以了


        这里我们采用的第二种方法




